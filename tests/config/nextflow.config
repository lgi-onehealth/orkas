def test_dir = '/Users/andersgs/dev/lgi/onetrakr/orkas/tests'

params {
    outdir = "test_output"
    publish_dir_mode = "link"
    enable_conda = false
    test_data {
        'fastq' {
            read1 = "${test_dir}/test_data/fastq/DRR040053/DRR040053_1.fastq.gz"
            read2 = "${test_dir}/test_data/fastq/DRR040053/DRR040053_2.fastq.gz"
            read1_clean = "${test_dir}/test_data/fastq/DRR040053/DRR040053_1.fastp.fastq.gz"
            read2_clean = "${test_dir}/test_data/fastq/DRR040053/DRR040053_2.fastp.fastq.gz"
            merged_clean = "${test_dir}/test_data/fastq/DRR040053/DRR040053.merged.fastq.gz"
        }
        'assemblies' {
            listeria = "${test_dir}/test_data/assemblies/listeria/GCF_000196035.1_ASM19603v1_genomic.fna"
            salmonella = "${test_dir}/test_data/assemblies/salmonella/GCF_000006945.2_ASM694v2_genomic.fna"
            nmeningitidis = "${test_dir}/test_data/assemblies/neisseria_meningitidis/GCF_008330805.1_ASM833080v1_genomic.fna"
            ngono = "${test_dir}/test_data/assemblies/neisseria_gonorrhoeae/GCF_013030075.1_ASM1303007v1_genomic.fna"
            spyogenes = "${test_dir}/test_data/assemblies/streptococcus_pyogenes/GCF_022869605.1_ASM2286960v1_genomic.fna"
        }
    }
}

docker {
    enabled = true
}

conda {
    enabled = false
}

profiles {
    reads_qc {
        process {
                withName: 'PHCUE' {
                    publishDir = [
                        path: { "${params.outdir}/reads_qc/phcueqc"},
                        mode: params.publish_dir_mode,
                        pattern: "*.{txt,yml}"
                    ]
                }
                withName: 'LIGHTER' {
                    publishDir = [
                        path: { "${params.outdir}/reads_qc/lighter" },
                        mode: params.publish_dir_mode,
                        pattern: "*.{cor.fq.gz,yml}"
                    ]
                }
                withName: 'FASTP' {
                    ext.args = "--cut_right --trim_poly_g"
                    publishDir = [
                        path: { "${params.outdir}/reads_qc/fastp" },
                        mode: params.publish_dir_mode,
                        pattern: "*.{html,json,log,fastp.fastq.gz,merged.fastq.gz,yml}"
                    ]
                }
        }
    }
    assembly {
        process {
            withName: 'UNICYCLER' {
                ext.args = "--min_fasta_length 500 --no_correct"
                publishDir = [
                    path: { "${params.outdir}/assembly/unicycler" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
            withName: 'QUAST' {
                ext.args = "--min-contig 500 --no-plots"
                publishDir = [
                    path: { "${params.outdir}/assembly/quast" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
        }
    }
    typing {
        process {
            withName: 'LISSERO' {
                ext.when = { meta.organism ==~ /Listeria monocytogenes/ }
                publishDir = [
                    path: { "${params.outdir}/typing/lissero" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
            withName: 'SISTR' {
                ext.when = { meta.organism ==~ /Salmonella enterica/ }
                publishDir = [
                    path: { "${params.outdir}/typing/sistr" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
            withName: 'EMMTYPER' {
                ext.when = { meta.organism ==~ /Streptococcus pyogenes/ }
                publishDir = [
                    path: { "${params.outdir}/typing/emmtyper" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
            withName: 'NGMASTER' {
                ext.when = { meta.organism ==~ /Neisseria gonorrhoeae/ }
                publishDir = [
                    path: { "${params.outdir}/typing/ngmaster" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
            withName: 'MENINGOTYPE' {
                ext.when = { meta.organism ==~ /Neisseria meningitidis/ }
                publishDir = [
                    path: { "${params.outdir}/typing/meningotype" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
            withName: 'MLST' {
                publishDir = [
                    path: { "${params.outdir}/typing/mlst" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
            withName: 'AMRFINDERPLUS_RUN' {
                publishDir = [
                    path: { "${params.outdir}/typing/amrfinderplus" },
                    mode: params.publish_dir_mode,
                    pattern: "*"
                ]
            }
        }
    }
}